{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\Goal\\\\src\\\\Home.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Airtable from \"airtable\";\nimport GoalManager from \"./components/GoalManager\";\nimport styled from \"styled-components\";\nimport { StyleBody } from \"./styles/StyleBody\";\nconst base = new Airtable({\n  apiKey: \"keytJWpkRw20pBVZj\"\n}).base(\"appjB69DE47Y1Seog\");\nconsole.log(base);\n\nfunction App() {\n  const [goals, setGoals] = useState([]);\n  const [updates, setUpdates] = useState([]);\n  useEffect(() => {\n    base(\"goals\").select({\n      view: \"Grid view\"\n    }).eachPage((records, fetchNextPage) => {\n      setGoals(records);\n      fetchNextPage();\n    });\n    base(\"updates\").select({\n      view: \"Grid view\"\n    }).eachPage((records, fetchNextPage) => {\n      setUpdates(records);\n      fetchNextPage();\n    });\n    console.log(goals);\n  }, [goals]);\n  const Title = styled.h1`\n  text-align: center;\n  font-size: 7rem;\n  margin: 2rem 0;\n`;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyleBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"My Goals\"), goals.map(goal => /*#__PURE__*/React.createElement(GoalManager, {\n    key: goal.id,\n    goal: goal,\n    updates: updates.filter(update => update.fields.goalid[0] === goal.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Administrator/Documents/Goal/src/Home.js"],"names":["React","useEffect","useState","Airtable","GoalManager","styled","StyleBody","base","apiKey","console","log","App","goals","setGoals","updates","setUpdates","select","view","eachPage","records","fetchNextPage","Title","h1","map","goal","id","filter","update","fields","goalid"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,MAAMC,IAAI,GAAG,IAAIJ,QAAJ,CAAa;AAAEK,EAAAA,MAAM,EAAE;AAAV,CAAb,EAA8CD,IAA9C,CAAmD,mBAAnD,CAAb;AACAE,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAEA,SAASI,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,IAAI,CAAC,OAAD,CAAJ,CACGS,MADH,CACU;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADV,EAEGC,QAFH,CAEY,CAACC,OAAD,EAAUC,aAAV,KAA4B;AACpCP,MAAAA,QAAQ,CAACM,OAAD,CAAR;AACAC,MAAAA,aAAa;AACd,KALH;AAMAb,IAAAA,IAAI,CAAC,SAAD,CAAJ,CACGS,MADH,CACU;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADV,EAEGC,QAFH,CAEY,CAACC,OAAD,EAAUC,aAAV,KAA4B;AACpCL,MAAAA,UAAU,CAACI,OAAD,CAAV;AACAC,MAAAA,aAAa;AACd,KALH;AAMAX,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,GAdQ,EAcN,CAACA,KAAD,CAdM,CAAT;AAgBA,QAAMS,KAAK,GAAGhB,MAAM,CAACiB,EAAG;;;;CAAxB;AAMA,sBACE,uDACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGV,KAAK,CAACW,GAAN,CAAWC,IAAD,iBACT,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,OAAO,EAAEV,OAAO,CAACY,MAAR,CACNC,MAAD,IAAYA,MAAM,CAACC,MAAP,CAAcC,MAAd,CAAqB,CAArB,MAA4BL,IAAI,CAACC,EADtC,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAHH,CADF;AAeD;;AAED,eAAed,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Airtable from \"airtable\";\r\nimport GoalManager from \"./components/GoalManager\";\r\nimport styled from \"styled-components\";\r\nimport { StyleBody } from \"./styles/StyleBody\";\r\n\r\nconst base = new Airtable({ apiKey: \"keytJWpkRw20pBVZj\" }).base(\"appjB69DE47Y1Seog\");\r\nconsole.log(base);\r\n\r\nfunction App() {\r\n  const [goals, setGoals] = useState([]);\r\n  const [updates, setUpdates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    base(\"goals\")\r\n      .select({ view: \"Grid view\" })\r\n      .eachPage((records, fetchNextPage) => {\r\n        setGoals(records);\r\n        fetchNextPage();\r\n      });\r\n    base(\"updates\")\r\n      .select({ view: \"Grid view\" })\r\n      .eachPage((records, fetchNextPage) => {\r\n        setUpdates(records);\r\n        fetchNextPage();\r\n      });\r\n    console.log(goals)\r\n  }, [goals]);\r\n\r\n  const Title = styled.h1`\r\n  text-align: center;\r\n  font-size: 7rem;\r\n  margin: 2rem 0;\r\n`;\r\n\r\n  return (\r\n    <>\r\n      <StyleBody/>\r\n      <Title>My Goals</Title>\r\n      {goals.map((goal) => (\r\n        <GoalManager\r\n          key={goal.id}\r\n          goal={goal}\r\n          updates={updates.filter(\r\n            (update) => update.fields.goalid[0] === goal.id\r\n          )}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}